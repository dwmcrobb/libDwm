.TH "Dwm::Rusage" 3 "libDwm-0.0.20240716" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dwm::Rusage \- This class encapsulates struct rusage and getrusage() functionality\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <DwmRusage\&.hh>\fP
.PP
Inherits \fBDwm::DescriptorIOCapable\fP, \fBDwm::StreamIOCapable\fP, \fBDwm::StreamedLengthCapable\fP, and \fBDwm::GZIOCapable\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRusage\fP ()"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBRusage\fP (const struct rusage &rusage)"
.br
.RI "Construct from a struct rusagee\&. "
.ti -1c
.RI "bool \fBGet\fP (int who)"
.br
.RI "Get the current process' rusage\&. "
.ti -1c
.RI "const \fBTimeValue\fP & \fBUserTime\fP () const"
.br
.RI "The total amount of time spent executing in user mode\&. "
.ti -1c
.RI "const \fBTimeValue\fP & \fBSystemTime\fP () const"
.br
.RI "The total amount of time spent in the system executing on behalf of the process(es)\&. "
.ti -1c
.RI "int64_t \fBMaxResidentSetSize\fP () const"
.br
.RI "The maximum resident set size utilized (in bytes)\&. "
.ti -1c
.RI "int64_t \fBIntegralSharedTextMemorySize\fP () const"
.br
.RI "An integral value indicating the amount of memory used by the text segment that was also shared among other pro- cesses\&. "
.ti -1c
.RI "int64_t \fBIntegralUnsharedDataSize\fP () const"
.br
.RI "An integral value of the amount of unshared memory residing in the data segment of a process (expressed in units of bytes * ticks-of-execution)\&. "
.ti -1c
.RI "int64_t \fBIntegralUnsharedStackSize\fP () const"
.br
.RI "An integral value of the amount of unshared memory residing in the stack segment of a process (expressed in units of bytes * ticks-of-execution)\&. "
.ti -1c
.RI "int32_t \fBPageReclaims\fP () const"
.br
.RI "The number of page faults serviced without any I/O activity; here I/O activity is avoided by reclaiming a page frame from the list of pages awaiting reallocation\&. "
.ti -1c
.RI "int32_t \fBPageFaults\fP () const"
.br
.RI "The number of page faults serviced that required I/O activity\&. "
.ti -1c
.RI "int32_t \fBSwaps\fP () const"
.br
.RI "The number of times a process was ``swapped'' out of main memory\&. "
.ti -1c
.RI "int32_t \fBBlockInputOperations\fP () const"
.br
.RI "The number of times the file system had to perform input\&. "
.ti -1c
.RI "int32_t \fBBlockOutputOperations\fP () const"
.br
.RI "The number of times the file system had to perform output\&. "
.ti -1c
.RI "int32_t \fBMessagesSent\fP () const"
.br
.RI "The number of IPC messages sent\&. "
.ti -1c
.RI "int32_t \fBMessagesReceived\fP () const"
.br
.RI "The number of IPC messages received\&. "
.ti -1c
.RI "int32_t \fBSignalsReceived\fP () const"
.br
.RI "The number of signals delivered\&. "
.ti -1c
.RI "int32_t \fBVoluntaryContextSwitches\fP () const"
.br
.RI "The number of times a context switch resulted due to a process voluntarily giving up the processor before its time slice was completed (usually to await availability of a resource)\&. "
.ti -1c
.RI "int32_t \fBInvoluntaryContextSwitches\fP () const"
.br
.RI "The number of times a context switch resulted due to a higher priority process becoming runnable or because the current process exceeded its time slice\&. "
.ti -1c
.RI "std::istream & \fBRead\fP (std::istream &is) override"
.br
.RI "Reads from an istream\&. Returns the istream\&. "
.ti -1c
.RI "std::ostream & \fBWrite\fP (std::ostream &os) const override"
.br
.RI "Writes to an ostream\&. Returns the ostream\&. "
.ti -1c
.RI "int \fBRead\fP (gzFile gzf) override"
.br
.RI "Reads from a gzFile\&. "
.ti -1c
.RI "int \fBWrite\fP (gzFile gzf) const override"
.br
.RI "Writes to a gzFile\&. "
.ti -1c
.RI "ssize_t \fBRead\fP (int fd) override"
.br
.RI "Reads from a file descriptor\&. "
.ti -1c
.RI "ssize_t \fBWrite\fP (int fd) const override"
.br
.RI "Writes to a file descriptor\&. "
.ti -1c
.RI "uint64_t \fBStreamedLength\fP () const override"
.br
.RI "Returns the number of bytes that would be written if we called one of the \fBWrite()\fP members\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBRusage\fP &rusage) const"
.br
.RI "operator == "
.in -1c

Public Member Functions inherited from \fBDwm::DescriptorReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~DescriptorReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::DescriptorWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~DescriptorWritable\fP ()"
.br
.RI "Destructor\&. "
.in -1c

Public Member Functions inherited from \fBDwm::StreamReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~StreamReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::StreamWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~StreamWritable\fP ()"
.br
.RI "Destructor\&. "
.in -1c

Public Member Functions inherited from \fBDwm::GZReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~GZReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::GZWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~GZWritable\fP ()"
.br
.RI "destructor "
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBRusage\fP &r)"
.br
.RI "Prints to an ostream\&. "
.in -1c
.SH "Detailed Description"
.PP 
This class encapsulates struct rusage and getrusage() functionality\&. 
.SH "Member Function Documentation"
.PP 
.SS "bool Dwm::Rusage::Get (int who)"

.PP
Get the current process' rusage\&. \fRwho\fP may be RUSAGE_SELF or RUSAGE_CHILDREN\&. See the getrusage(2) manpage\&. 
.SS "int64_t Dwm::Rusage::IntegralSharedTextMemorySize () const"

.PP
An integral value indicating the amount of memory used by the text segment that was also shared among other pro- cesses\&. This value is expressed in units of bytes * ticks-of-execution\&. Ticks are statistics clock ticks\&. The statistics clock has a frequency of sysconf(_SC_CLK_TCK) ticks per second\&. 
.SS "int Dwm::Rusage::Read (gzFile gzf)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads from a gzFile\&. Returns the number of bytes read on success, -1 on failure\&. 
.PP
Implements \fBDwm::GZReadable\fP\&.
.SS "ssize_t Dwm::Rusage::Read (int fd)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads from a file descriptor\&. Returns the number of bytes read on success, -1 on failure\&. 
.PP
Implements \fBDwm::DescriptorReadable\fP\&.
.SS "std::istream & Dwm::Rusage::Read (std::istream & is)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads from an istream\&. Returns the istream\&. 
.PP
Implements \fBDwm::StreamReadable\fP\&.
.SS "uint64_t Dwm::Rusage::StreamedLength () const\fR [override]\fP, \fR [virtual]\fP"

.PP
Returns the number of bytes that would be written if we called one of the \fBWrite()\fP members\&. 
.PP
Implements \fBDwm::StreamedLengthCapable\fP\&.
.SS "int Dwm::Rusage::Write (gzFile gzf) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes to a gzFile\&. Returns the number of bytes written on success, -1 on failure\&. 
.PP
Implements \fBDwm::GZWritable\fP\&.
.SS "ssize_t Dwm::Rusage::Write (int fd) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes to a file descriptor\&. Returns the number of bytes written on success, -1 on failure\&. 
.PP
Implements \fBDwm::DescriptorWritable\fP\&.
.SS "std::ostream & Dwm::Rusage::Write (std::ostream & os) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes to an ostream\&. Returns the ostream\&. 
.PP
Implements \fBDwm::StreamWritable\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libDwm-0\&.0\&.20240716 from the source code\&.
