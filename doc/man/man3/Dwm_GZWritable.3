.TH "Dwm::GZWritable" 3 "libDwm-0.0.20240716" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dwm::GZWritable \- This class is a pure virtual class, defining an interface for classes that can write their contents to a gzFile\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <DwmGZIOCapable\&.hh>\fP
.PP
Inherited by \fBDwm::GZIOCapable\fP, \fBDwm::Ipv4IcmpMessage\fP, \fBDwm::Ipv4TcpPayload\fP, and \fBDwm::Ipv4UdpPayload\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~GZWritable\fP ()"
.br
.RI "destructor "
.ti -1c
.RI "virtual int \fBWrite\fP (gzFile gzf) const =0"
.br
.RI "Write to a gzFile\&. "
.in -1c
.SH "Detailed Description"
.PP 
This class is a pure virtual class, defining an interface for classes that can write their contents to a gzFile\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual int Dwm::GZWritable::Write (gzFile gzf) const\fR [pure virtual]\fP"

.PP
Write to a gzFile\&. Should return the number of bytes written on success (-1 on failure?) 
.PP
Implemented in \fBDwm::IpAddress\fP, \fBDwm::Ipv4Address\fP, \fBDwm::Ipv4IcmpMessage\fP, \fBDwm::Ipv4PacketHeader\fP, \fBDwm::Ipv4Prefix\fP, \fBDwm::Ipv4Routes< _valueT >\fP, \fBDwm::Ipv4TcpHeader\fP, \fBDwm::Ipv4TcpPacket\fP, \fBDwm::Ipv4TcpPayload\fP, \fBDwm::Ipv4UdpHeader\fP, \fBDwm::Ipv4UdpPacket\fP, \fBDwm::Ipv4UdpPayload\fP, \fBDwm::Ipv6Address\fP, \fBDwm::Ipv6AddrMap< T, Hash >\fP, \fBDwm::Ipv6Prefix\fP, \fBDwm::Ipv6PrefixMap< T, Hash >\fP, \fBDwm::MacAddress\fP, \fBDwm::MplsLabel\fP, \fBDwm::MplsLabelStack\fP, \fBDwm::Rusage\fP, \fBDwm::TimeInterval64\fP, \fBDwm::TimeInterval\fP, \fBDwm::TimeValue64\fP, and \fBDwm::TimeValue\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libDwm-0\&.0\&.20240716 from the source code\&.
