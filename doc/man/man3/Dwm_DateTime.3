.TH "Dwm::DateTime" 3 "libDwm-0.0.20240716" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dwm::DateTime \- This class just encapsulates a struct tm and some of the typical functionality for dealing with date and time\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <DwmDateTime\&.hh>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDateTime\fP (bool now=false)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBDateTime\fP (const \fBTimeValue\fP &tv)"
.br
.RI "Construct from a \fBTimeValue\fP\&. "
.ti -1c
.RI "\fBDateTime\fP (const \fBDwm::TimeValue64\fP &tv)"
.br
.RI "Construct from a \fBTimeValue64\fP\&. "
.ti -1c
.RI "\fBTimeValue\fP \fBGetTimeValue\fP () const"
.br
.RI "Return the equivalent \fBTimeValue\fP, using the current timezone setting\&. "
.ti -1c
.RI "\fBTimeValue64\fP \fBGetTimeValue64\fP () const"
.br
.RI "Return the equivalent \fBTimeValue64\fP, using the current timezone setting\&. "
.ti -1c
.RI "bool \fBIsDaylightSavings\fP () const"
.br
.RI "Returns true if daylight savings is in effect\&. "
.ti -1c
.RI "uint8_t \fBSec\fP () const"
.br
.RI "Returns the seconds (0 - 59)\&. "
.ti -1c
.RI "uint8_t \fBMin\fP () const"
.br
.RI "Returns the minutes (0 - 59)\&. "
.ti -1c
.RI "uint8_t \fBHour\fP () const"
.br
.RI "Returns the hour (0 - 23)\&. "
.ti -1c
.RI "uint8_t \fBDayOfMonth\fP () const"
.br
.RI "Returns the day of the month (1 - 31)\&. "
.ti -1c
.RI "uint8_t \fBMonth\fP () const"
.br
.RI "Returns the month of the year (1 - 12)\&. "
.ti -1c
.RI "uint16_t \fBYear\fP () const"
.br
.RI "Returns the year\&. "
.ti -1c
.RI "uint8_t \fBDayOfWeek\fP () const"
.br
.RI "Returns the day of the week (Sunday == 0) "
.ti -1c
.RI "uint16_t \fBDayOfYear\fP () const"
.br
.RI "Returns the day of the year (0 - 365)\&. "
.ti -1c
.RI "std::string \fBTimeZone\fP () const"
.br
.RI "Returns the time zone\&. "
.ti -1c
.RI "std::string \fBFormatted\fP (const std::string &format) const"
.br
.RI "Returns a string formatted according to \fRformat\fP\&. "
.ti -1c
.RI "bool \fBParse\fP (const std::string &s, const std::string &format)"
.br
.RI "Parses time string \fRs\fP according to the given \fRformat\fP\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBDateTime\fP &dt) const"
.br
.RI "operator == "
.ti -1c
.RI "bool \fBoperator<\fP (const \fBDateTime\fP &dt) const"
.br
.RI "operator < "
.in -1c
.SH "Detailed Description"
.PP 
This class just encapsulates a struct tm and some of the typical functionality for dealing with date and time\&. 

Note that we always initialize using the local timezone\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Dwm::DateTime::DateTime (bool now = \fRfalse\fP)"

.PP
Constructor\&. Will initialize to the UNIX epoch if now is false, otherwise will initialize ot the current time\&. 
.SH "Member Function Documentation"
.PP 
.SS "std::string Dwm::DateTime::Formatted (const std::string & format) const"

.PP
Returns a string formatted according to \fRformat\fP\&. This just calls strftime() under the hood; see the strftime() manpage\&. 
.SS "bool Dwm::DateTime::Parse (const std::string & s, const std::string & format)"

.PP
Parses time string \fRs\fP according to the given \fRformat\fP\&. Returns tree on success\&. 
.PP
\fBNote\fP
.RS 4
This calls strptime() under the hood; see the strptime() manpage\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for libDwm-0\&.0\&.20240716 from the source code\&.
