.TH "Dwm::MplsLabelStack" 3 "libDwm-0.0.20240716" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dwm::MplsLabelStack \- Encapsulates an MPLS label stack\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <DwmMplsLabelStack\&.hh>\fP
.PP
Inherits \fBDwm::DescriptorIOCapable\fP, Dwm::FileIOCapable, \fBDwm::StreamIOCapable\fP, \fBDwm::StreamedLengthCapable\fP, \fBDwm::GZIOCapable\fP, and \fBDwm::BZ2IOCapable\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "const std::vector< \fBMplsLabel\fP > & \fBLabels\fP () const"
.br
.RI "Returns a const reference to the contained MPLS labels\&. "
.ti -1c
.RI "std::vector< \fBMplsLabel\fP > & \fBLabels\fP ()"
.br
.RI "Returns a mutable reference to the contained MPLS labels\&. "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBMplsLabelStack\fP &labelStack) const"
.br
.RI "operator == "
.ti -1c
.RI "std::istream & \fBRead\fP (std::istream &is) override"
.br
.RI "Reads the label stack from an istream\&. Returns the istream\&. "
.ti -1c
.RI "std::ostream & \fBWrite\fP (std::ostream &os) const override"
.br
.RI "Writes the label stack to an ostream\&. Returns the ostream\&. "
.ti -1c
.RI "ssize_t \fBRead\fP (int fd) override"
.br
.RI "Reads the label stack from a file descriptor\&. "
.ti -1c
.RI "ssize_t \fBWrite\fP (int fd) const override"
.br
.RI "Writes the label stack to a file descriptor\&. "
.ti -1c
.RI "size_t \fBRead\fP (FILE *f) override"
.br
.RI "Reads the label stack from a FILE\&. "
.ti -1c
.RI "size_t \fBWrite\fP (FILE *f) const override"
.br
.RI "Writes the label stack to a FILE\&. "
.ti -1c
.RI "int \fBRead\fP (gzFile gzf) override"
.br
.RI "Reads the label stack from the given gzFile \fRgzf\fP\&. "
.ti -1c
.RI "int \fBWrite\fP (gzFile gzf) const override"
.br
.RI "Writes the label stack to the given gzFile \fRgzf\fP\&. "
.ti -1c
.RI "int \fBBZRead\fP (BZFILE *bzf) override"
.br
.RI "Reads the label stack from the given BZFILE \fRbzf\fP\&. "
.ti -1c
.RI "int \fBBZWrite\fP (BZFILE *bzf) const override"
.br
.RI "Writes the label stack to the given BZFILE \fRbzf\fP\&. "
.ti -1c
.RI "uint64_t \fBStreamedLength\fP () const override"
.br
.RI "Returns the number of bytes that should be written if we call one of the \fBWrite()\fP members\&. "
.in -1c

Public Member Functions inherited from \fBDwm::DescriptorReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~DescriptorReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::DescriptorWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~DescriptorWritable\fP ()"
.br
.RI "Destructor\&. "
.in -1c

Public Member Functions inherited from \fBDwm::StreamReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~StreamReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::StreamWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~StreamWritable\fP ()"
.br
.RI "Destructor\&. "
.in -1c

Public Member Functions inherited from \fBDwm::GZReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~GZReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::GZWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~GZWritable\fP ()"
.br
.RI "destructor "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBMplsLabel\fP > \fB_labels\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBMplsLabelStack\fP &labelStack)"
.br
.RI "Prints the label stack to an ostream in human-readable form\&. "
.in -1c
.SH "Detailed Description"
.PP 
Encapsulates an MPLS label stack\&. 
.SH "Member Function Documentation"
.PP 
.SS "int Dwm::MplsLabelStack::BZRead (BZFILE * bzf)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the label stack from the given BZFILE \fRbzf\fP\&. Returns the number of bytes read on success, -1 on failure\&. 
.PP
Implements \fBDwm::BZ2Readable\fP\&.
.SS "int Dwm::MplsLabelStack::BZWrite (BZFILE * bzf) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the label stack to the given BZFILE \fRbzf\fP\&. Returns the number of bytes written on success, -1 on failure\&. 
.PP
Implements \fBDwm::BZ2Writable\fP\&.
.SS "size_t Dwm::MplsLabelStack::Read (FILE * f)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the label stack from a FILE\&. Returns 1 on success, 0 on failure\&. 
.PP
Implements \fBDwm::FileReadable\fP\&.
.SS "int Dwm::MplsLabelStack::Read (gzFile gzf)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the label stack from the given gzFile \fRgzf\fP\&. Returns the number of bytes read on success, -1 on failure\&. 
.PP
Implements \fBDwm::GZReadable\fP\&.
.SS "ssize_t Dwm::MplsLabelStack::Read (int fd)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the label stack from a file descriptor\&. Returns the number of bytes read on success, -1 on failure\&. 
.PP
Implements \fBDwm::DescriptorReadable\fP\&.
.SS "std::istream & Dwm::MplsLabelStack::Read (std::istream & is)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the label stack from an istream\&. Returns the istream\&. 
.PP
Implements \fBDwm::StreamReadable\fP\&.
.SS "uint64_t Dwm::MplsLabelStack::StreamedLength () const\fR [override]\fP, \fR [virtual]\fP"

.PP
Returns the number of bytes that should be written if we call one of the \fBWrite()\fP members\&. 
.PP
Implements \fBDwm::StreamedLengthCapable\fP\&.
.SS "size_t Dwm::MplsLabelStack::Write (FILE * f) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the label stack to a FILE\&. Returns 1 on success, 0 on failure\&. 
.PP
Implements \fBDwm::FileWritable\fP\&.
.SS "int Dwm::MplsLabelStack::Write (gzFile gzf) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the label stack to the given gzFile \fRgzf\fP\&. Returns the number of bytes written on success, -1 on failure\&. 
.PP
Implements \fBDwm::GZWritable\fP\&.
.SS "ssize_t Dwm::MplsLabelStack::Write (int fd) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the label stack to a file descriptor\&. Returns the number of bytes written on success, -1 on failure\&. 
.PP
Implements \fBDwm::DescriptorWritable\fP\&.
.SS "std::ostream & Dwm::MplsLabelStack::Write (std::ostream & os) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the label stack to an ostream\&. Returns the ostream\&. 
.PP
Implements \fBDwm::StreamWritable\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libDwm-0\&.0\&.20240716 from the source code\&.
