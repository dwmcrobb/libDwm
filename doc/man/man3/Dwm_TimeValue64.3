.TH "Dwm::TimeValue64" 3 "libDwm-0.0.20240716" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dwm::TimeValue64 \- This class encapsulates a time value beyond the UNIX epoch, with microsecond granularity\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <DwmTimeValue64\&.hh>\fP
.PP
Inherits \fBDwm::DescriptorIOCapable\fP, Dwm::FileIOCapable, \fBDwm::StreamIOCapable\fP, \fBDwm::StreamedLengthCapable\fP, \fBDwm::GZIOCapable\fP, and \fBDwm::BZ2IOCapable\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTimeValue64\fP (bool setNow=false)"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fBTimeValue64\fP (const struct timeval &tv)"
.br
.RI "Construct from a struct timeval\&. "
.ti -1c
.RI "\fBTimeValue64\fP (const struct timespec &ts)"
.br
.RI "Construct from a struct timespec\&. "
.ti -1c
.RI "\fBTimeValue64\fP (const \fBTimeValue\fP &tv)"
.br
.RI "Construct from a \fBTimeValue\fP\&. "
.ti -1c
.RI "\fBTimeValue64\fP (uint64_t secs, uint32_t usecs)"
.br
.RI "Construct from the given \fRsecs\fP and \fRusecs\fP\&. "
.ti -1c
.RI "void \fBSetNow\fP ()"
.br
.RI "Sets the \fBTimeValue64\fP to the current time\&. "
.ti -1c
.RI "void \fBSet\fP (const struct timeval &tv)"
.br
.RI "Sets the \fBTimeValue64\fP from the given struct timeval \fRtv\fP\&. "
.ti -1c
.RI "void \fBSet\fP (uint64_t secs, uint32_t usecs)"
.br
.RI "Sets the \fBTimeValue64\fP from the given \fRsecs\fP and \fRusecs\fP\&. "
.ti -1c
.RI "uint64_t \fBSecs\fP () const"
.br
.RI "Returns the seconds\&. "
.ti -1c
.RI "uint32_t \fBUsecs\fP () const"
.br
.RI "Returns the residual microseconds\&. "
.ti -1c
.RI "struct tm \fBLocalTime\fP () const"
.br
.ti -1c
.RI "bool \fBoperator<\fP (const \fBTimeValue64\fP &tv) const"
.br
.RI "Less-than operator\&. "
.ti -1c
.RI "bool \fBoperator<=\fP (const \fBTimeValue64\fP &tv) const"
.br
.RI "operator <= "
.ti -1c
.RI "bool \fBoperator>\fP (const \fBTimeValue64\fP &tv) const"
.br
.RI "Greater-than operator\&. "
.ti -1c
.RI "bool \fBoperator>=\fP (const \fBTimeValue64\fP &tv) const"
.br
.RI "operator >= "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBTimeValue64\fP &tv) const"
.br
.RI "Equal-to operator\&. "
.ti -1c
.RI "\fBTimeValue64\fP & \fBoperator+=\fP (const \fBTimeValue64\fP &tv)"
.br
.ti -1c
.RI "\fBTimeValue64\fP & \fBoperator\-=\fP (const \fBTimeValue64\fP &tv)"
.br
.ti -1c
.RI "\fBTimeValue64\fP & \fBoperator*=\fP (uint32_t x)"
.br
.ti -1c
.RI "\fBTimeValue64\fP & \fBoperator/=\fP (uint32_t x)"
.br
.ti -1c
.RI "uint64_t \fBStreamedLength\fP () const override"
.br
.RI "Returns the number of bytes that would be written if one of the \fBWrite()\fP members were called\&. "
.ti -1c
.RI "std::istream & \fBRead\fP (std::istream &is) override"
.br
.RI "Reads the \fBTimeValue64\fP from an istream\&. Returns the istream\&. "
.ti -1c
.RI "std::ostream & \fBWrite\fP (std::ostream &os) const override"
.br
.RI "Writes the \fBTimeValue64\fP to an ostream\&. Returns the ostream\&. "
.ti -1c
.RI "size_t \fBRead\fP (FILE *f) override"
.br
.RI "Reads the \fBTimeValue64\fP from a FILE pointer\&. "
.ti -1c
.RI "size_t \fBWrite\fP (FILE *f) const override"
.br
.RI "Writes the \fBTimeValue64\fP to a FILE pointer\&. "
.ti -1c
.RI "ssize_t \fBRead\fP (int fd) override"
.br
.RI "Reads the \fBTimeValue64\fP from a file descriptor\&. "
.ti -1c
.RI "ssize_t \fBWrite\fP (int fd) const override"
.br
.RI "Writes the \fBTimeValue64\fP to a file descriptor\&. "
.ti -1c
.RI "int \fBRead\fP (gzFile gzf) override"
.br
.RI "Reads the \fBTimeValue64\fP from a gzFile\&. "
.ti -1c
.RI "int \fBWrite\fP (gzFile gzf) const override"
.br
.RI "Writes the \fBTimeValue64\fP to a gzFile\&. "
.ti -1c
.RI "int \fBBZRead\fP (BZFILE *bzf) override"
.br
.RI "Reads the \fBTimeValue64\fP from a BZFILE pointer\&. "
.ti -1c
.RI "int \fBBZWrite\fP (BZFILE *bzf) const override"
.br
.RI "Writes the \fBTimeValue64\fP to a BZFILE pointer\&. "
.ti -1c
.RI "\fBoperator double\fP () const"
.br
.RI "Returns value as a double (useful for printing)\&. "
.in -1c

Public Member Functions inherited from \fBDwm::DescriptorReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~DescriptorReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::DescriptorWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~DescriptorWritable\fP ()"
.br
.RI "Destructor\&. "
.in -1c

Public Member Functions inherited from \fBDwm::StreamReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~StreamReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::StreamWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~StreamWritable\fP ()"
.br
.RI "Destructor\&. "
.in -1c

Public Member Functions inherited from \fBDwm::GZReadable\fP
.in +1c
.ti -1c
.RI "virtual \fB~GZReadable\fP ()"
.br
.RI "destructor "
.in -1c

Public Member Functions inherited from \fBDwm::GZWritable\fP
.in +1c
.ti -1c
.RI "virtual \fB~GZWritable\fP ()"
.br
.RI "destructor "
.in -1c
.SH "Detailed Description"
.PP 
This class encapsulates a time value beyond the UNIX epoch, with microsecond granularity\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Dwm::TimeValue64::TimeValue64 (bool setNow = \fRfalse\fP)"

.PP
Constructor\&. Initializes to 0 (the UNIX epoch) if setNow is false, else initializaes to the current time\&. 
.SH "Member Function Documentation"
.PP 
.SS "int Dwm::TimeValue64::BZRead (BZFILE * bzf)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the \fBTimeValue64\fP from a BZFILE pointer\&. Returns the number of bytes read on success (8), -1 on failure\&. 
.PP
Implements \fBDwm::BZ2Readable\fP\&.
.SS "int Dwm::TimeValue64::BZWrite (BZFILE * bzf) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the \fBTimeValue64\fP to a BZFILE pointer\&. Returns the number of bytes written on success (8), -1 on failure\&. 
.PP
Implements \fBDwm::BZ2Writable\fP\&.
.SS "size_t Dwm::TimeValue64::Read (FILE * f)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the \fBTimeValue64\fP from a FILE pointer\&. Returns 1 on success, 0 on failure\&. 
.PP
Implements \fBDwm::FileReadable\fP\&.
.SS "int Dwm::TimeValue64::Read (gzFile gzf)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the \fBTimeValue64\fP from a gzFile\&. Returns the number of bytes read on success (8), -1 on failure\&. 
.PP
Implements \fBDwm::GZReadable\fP\&.
.SS "ssize_t Dwm::TimeValue64::Read (int fd)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the \fBTimeValue64\fP from a file descriptor\&. Returns the number of bytes read on success (8), -1 on failure\&. 
.PP
Implements \fBDwm::DescriptorReadable\fP\&.
.SS "std::istream & Dwm::TimeValue64::Read (std::istream & is)\fR [override]\fP, \fR [virtual]\fP"

.PP
Reads the \fBTimeValue64\fP from an istream\&. Returns the istream\&. 
.PP
Implements \fBDwm::StreamReadable\fP\&.
.SS "uint64_t Dwm::TimeValue64::StreamedLength () const\fR [override]\fP, \fR [virtual]\fP"

.PP
Returns the number of bytes that would be written if one of the \fBWrite()\fP members were called\&. 
.PP
Implements \fBDwm::StreamedLengthCapable\fP\&.
.SS "size_t Dwm::TimeValue64::Write (FILE * f) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the \fBTimeValue64\fP to a FILE pointer\&. Returns 1 on success, 0 on failure\&. 
.PP
Implements \fBDwm::FileWritable\fP\&.
.SS "int Dwm::TimeValue64::Write (gzFile gzf) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the \fBTimeValue64\fP to a gzFile\&. Returns the number of bytes written on success (8), -1 on failure\&. 
.PP
Implements \fBDwm::GZWritable\fP\&.
.SS "ssize_t Dwm::TimeValue64::Write (int fd) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the \fBTimeValue64\fP to a file descriptor\&. Returns the number of bytes written on success (8), -1 on failure\&. 
.PP
Implements \fBDwm::DescriptorWritable\fP\&.
.SS "std::ostream & Dwm::TimeValue64::Write (std::ostream & os) const\fR [override]\fP, \fR [virtual]\fP"

.PP
Writes the \fBTimeValue64\fP to an ostream\&. Returns the ostream\&. 
.PP
Implements \fBDwm::StreamWritable\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libDwm-0\&.0\&.20240716 from the source code\&.
