.TH "Dwm::Executor" 3 "libDwm-0.0.20240716" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dwm::Executor \- Provides a simple interface to fork() + execvp()\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <DwmExecutor\&.hh>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static pid_t \fBExecute\fP (const std::string &commandString)"
.br
.RI "Executes the given \fRcommandString\fP, which may contain arguments\&. "
.ti -1c
.RI "static pid_t \fBExecute\fP (const std::string &command, char *const argv[])"
.br
.RI "Executes the given \fRcommand\fP with arguments \fRargv\fP\&. "
.ti -1c
.RI "static pid_t \fBExecute\fP (char *const argv[])"
.br
.RI "Executes the command with arguments that are combined in \fRargv\fP\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const int \fBk_COMMAND\fP = 260"
.br
.RI "Constant for the lexer\&. "
.ti -1c
.RI "static const int \fBk_ARGUMENT\fP = 261"
.br
.RI "Constant for the lexer\&. "
.ti -1c
.RI "static const int \fBk_WHITESPACE\fP = 262"
.br
.RI "Constant for the lexer\&. "
.in -1c
.SH "Detailed Description"
.PP 
Provides a simple interface to fork() + execvp()\&. 

I wanted a call that looked like system() in usage, but didn't block for the exit of the child and returned a PID\&. This call is \fBExecute(const std::string &)\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "static pid_t Dwm::Executor::Execute (char *const argv[])\fR [static]\fP"

.PP
Executes the command with arguments that are combined in \fRargv\fP\&. Returns the process ID\&. 
.SS "static pid_t Dwm::Executor::Execute (const std::string & command, char *const argv[])\fR [static]\fP"

.PP
Executes the given \fRcommand\fP with arguments \fRargv\fP\&. Returns the process ID\&. 
.SS "static pid_t Dwm::Executor::Execute (const std::string & commandString)\fR [static]\fP"

.PP
Executes the given \fRcommandString\fP, which may contain arguments\&. Returns the process ID\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for libDwm-0\&.0\&.20240716 from the source code\&.
