.TH "Dwm::EngFormat" 3 "libDwm-0.0.20240716" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Dwm::EngFormat \- Class to format numbers in an engineering-type form\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <DwmEngFormat\&.hh>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBEngFormat\fP (const uint64_t &val, uint8_t precision=4, uint8_t width=5)"
.br
.ti -1c
.RI "\fBEngFormat\fP (const uint32_t &val, uint8_t precision=4, uint8_t width=5)"
.br
.ti -1c
.RI "\fBEngFormat\fP (const uint16_t &val, uint8_t precision=4, uint8_t width=5)"
.br
.ti -1c
.RI "\fBEngFormat\fP (const int64_t &val, uint8_t precision=4, uint8_t width=5)"
.br
.ti -1c
.RI "\fBEngFormat\fP (const int32_t &val, uint8_t precision=4, uint8_t width=5)"
.br
.ti -1c
.RI "\fBEngFormat\fP (const int16_t &val, uint8_t precision=4, uint8_t width=5)"
.br
.ti -1c
.RI "\fBEngFormat\fP (const float &val, uint8_t precision=4, uint8_t width=5)"
.br
.ti -1c
.RI "\fBEngFormat\fP (const double &val, uint8_t precision=4, uint8_t width=5)"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBEngFormat\fP &ef)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class to format numbers in an engineering-type form\&. 

Instead of printing numerical powers of 10, we print 'K' (kilo), 'M' (mega), 'm' (milli), 'u' (micro), et\&. al\&.
.PP
Example:
.PP
uint32_t v = 123456; std::cout << \fBDwm::EngFormat(v)\fP << std::endl;
.PP
would print:
.PP
123\&.5K
.PP
\fRprecision\fP is the maximum precision (places including those to the left of the decimal point) to print\&. \fRwidth\fP is the minimum field width to print; we right-justify and fill with spaces\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for libDwm-0\&.0\&.20240716 from the source code\&.
