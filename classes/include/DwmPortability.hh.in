//===========================================================================
// @(#) $DwmPath$
//===========================================================================
//  Copyright (c) Daniel W. McRobb 2006-2007
//  All rights reserved.
//
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions
//  are met:
//
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The names of the authors and copyright holders may not be used to
//     endorse or promote products derived from this software without
//     specific prior written permission.
//
//  IN NO EVENT SHALL DANIEL W. MCROBB BE LIABLE TO ANY PARTY FOR
//  DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES,
//  INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE,
//  EVEN IF DANIEL W. MCROBB HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
//  DAMAGE.
//
//  THE SOFTWARE PROVIDED HEREIN IS ON AN "AS IS" BASIS, AND
//  DANIEL W. MCROBB HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,
//  UPDATES, ENHANCEMENTS, OR MODIFICATIONS. DANIEL W. MCROBB MAKES NO
//  REPRESENTATIONS AND EXTENDS NO WARRANTIES OF ANY KIND, EITHER
//  IMPLIED OR EXPRESS, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//  WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE,
//  OR THAT THE USE OF THIS SOFTWARE WILL NOT INFRINGE ANY PATENT,
//  TRADEMARK OR OTHER RIGHTS.
//===========================================================================

//---------------------------------------------------------------------------
//!  \file DwmPortability.hh
//!  \brief A configure target for dealing with OS differences.
//---------------------------------------------------------------------------

#undef HAVE_CFBYTE_ORDER_H
#undef HAVE_BYTESWAP_H
#undef HAVE_ENDIAN_H
#undef HAVE_KVM_H

//---------------------------------------------------------------------------
//  Deal with lack of be64toh() and htobe64() on OS X and Linux
//---------------------------------------------------------------------------
#ifdef HAVE_CFBYTE_ORDER_H
  //  define be64toh() and htobe64() for OS X
  #include <CoreFoundation/CFByteOrder.h>
  #ifndef be64toh
    #define be64toh(x)  OSSwapBigToHostInt64((x))
  #endif
  #ifndef htobe64
    #define htobe64(x)  OSSwapHostToBigInt64((x))
  #endif
  #ifndef be32toh
    #define be32toh(x)  OSSwapBigToHostInt32(x)
  #endif
  #ifndef htobe32
    #define htobe32(x)  OSSwapHostToBigInt32(x)
  #endif
  #ifndef be16toh
    #define be16toh(x)  OSSwapBigToHostInt16(x)
  #endif
  #ifndef htobe16
    #define htobe16(x)  OSSwapHostToBigInt16(x)
  #endif
#else
  #ifdef HAVE_BYTESWAP_H
    extern "C" {
      #include <byteswap.h>
    }
    #ifdef HAVE_ENDIAN_H
      extern "C" {
        #include <endian.h>
      }
    #endif
    #ifndef be64toh
      #if __BYTE_ORDER == __LITTLE_ENDIAN
        #define be64toh(x)  bswap_64((x))
      #else
        #define be64toh(x)  (x)
      #endif
    #endif
    #ifndef htobe64
      #if __BYTE_ORDER == __LITTLE_ENDIAN
        #define htobe64(x)  bswap_64((x))
      #else
        #define htobe64(x)  (x)
      #endif
    #endif
  #endif

  #ifndef be64toh
    #if defined(__OpenBSD__)
      #define be64toh(x)  betoh64((x))
    #endif
  #endif

#endif

#undef HAVE_STRTOF

#undef HAVE_CPP0X
#undef HAVE_TR1
#undef HAVE_CPP11
#undef HAVE_CPP1Z
#undef HAVE_CPP17
#undef HAVE_CPP20
#undef HAVE_CPP23

#define HAVE_GPLUSPLUS_VERSION(MAJOR, MINOR) \
  (__GNUC__ > (MAJOR) || (__GNUC__ == (MAJOR) && __GNUC_MINOR__ >= (MINOR)))

#undef HAVE_NET_PFVAR_H
#undef HAVE_NET_IF_PFLOG_H


//---------------------------- emacs settings -----------------------------
//  Local Variables:
//  mode: C++
//  tab-width: 2
//  indent-tabs-mode: nil
//  c-basic-offset: 2
//  End:
//-------------------------------------------------------------------------
